local lpr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local currentCamera = workspace.CurrentCamera
local vp = currentCamera.worldToViewportPoint

local headOffset = Vector3.new(0,0.5,0)
local legOffset = Vector3.new(0,3,0)

for i,v in pairs(game:GetService("Players"):GetChildren()) do
	local boxOutline = Drawing.new("Square")
	boxOutline.Visible = false
	boxOutline.Color = Color3.new(0,0,0)
	boxOutline.Thickness = 3
	boxOutline.Transparency = 1
	boxOutline.Filled = false
	
	local box = Drawing.new("Square")
	box.Visible = false
	box.Color = Color3.new(1,1,1)
	box.Thickness = 1
	box.Filled = false
	
	function esp()
		game:GetService("RunService").RenderStepped:Connect(function()
			if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Character.Humanoid.Health > 0 then
				local vector, on = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
				
				local root = v.Character.HumanoidRootPart
				local head = v.Character.Head
				local rp, rv = vp(currentCamera, root.Position)
				local hp = vp(currentCamera, head.Position + headOffset)
				local lp = vp(currentCamera, root.Position - legOffset)
				
				if on  then
					boxOutline.Size = Vector2.new(1000 / rp.Z, hp.Y - lp.Y)
					boxOutline.Position = Vector2.new(rp.X - boxOutline.Size.X / 2, rp.Y - boxOutline.Size.Y / 2)
					boxOutline.Visible = true
					
					box.Size = Vector2.new(1000 / rp.Z, hp.Y - lp.Y)
					box.Position = Vector2.new(rp.X - box.Size.X / 2, rp.Y - box.Size.Y / 2)
					box.Visible = true
				else
					boxOutline.Visible = false
					box.Visible = false
				end
			else
				boxOutline.Visible = false
				box.Visible = false
			end
		end)
	end
	coroutine.wrap(esp)()
end
